@import '../../shared-styles/variables';

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

:global {
  body {
    font-family: Neutral, Arial, 'Helvetica Neue', Helvetica, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-variant: common-ligatures;
    font-feature-settings: 'liga', 'kern', 'clig';
  }

  .root {
    max-width: $content-width;
    margin: 0 auto;
    padding: 3em 1em;
  }

  h2,
  h3 {
    display: inline-block;
    position: relative;
    line-height: 1.625;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    margin-top: 3em;

    &:first-of-type {
      margin-top: 0;
    }

    &::before {
      content: '';
      position: absolute;
      width: 100%;
      left: 0;
      top: -2px;
    }
  }

  h2 {
    font-size: 2.9em;
  }

  h3 {
    font-size: 1em;

    &::before {
      top: -2px;
    }
  }
}

.list {
  margin-bottom: 2em;
  padding-left: 1em;
}

.header {
  text-align: center;
}

.logoInline {
  width: 182px;
  height: 95px;
  margin: 0 auto 36px;
}

.title {
  display: inline-block;
  position: relative;
  font-size: 1.1428571429em;
  letter-spacing: 0.05em;
  text-transform: uppercase;
}

.nav {
  text-align: center;
  margin: 2em 0 4em;
  padding: 0;
}

.navItem {
  display: inline-block;
  margin-left: 8px;

  &:first-child {
    margin-left: 0;
  }
}

.link {
  display: block;
  position: relative;
  overflow: hidden;
  font-size: 13px;
  padding: 8px;
  text-transform: uppercase;
  text-decoration: none;
  font-weight: bold;
  color: rgb(0, 0, 0);
  transition: color $default-transition;

  &::after {
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    content: '';
    display: block;
    background: rgb(0, 0, 0);
    width: 100%;
    height: 100%;
    transition: transform $default-transition;
    transform: translateX(-105%);
  }

  &:hover {
    color: rgb(255, 255, 255);

    &::after {
      transform: translateX(0);
    }
  }
}

.activeLink {
  color: rgb(255, 255, 255);

  &::after {
    transform: translateX(0);
  }
}
